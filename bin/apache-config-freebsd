#!/bin/sh
######################################################################
# LICENSE pulled in with, cat LICENSE | awk '{print "# "$0}'
######################################################################
#    Copyright 2015 John Ko
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#
######################################################################
# Script version is yymmdd-HHMMSS in UTC, date -u +%y%m%d-%H%M%S
######################################################################
SCRIPTVERSION=150611-075324

######################################################################
# Variables
######################################################################

APACHECONF=/usr/local/etc/apache24/httpd.conf

includesdir="${APACHECONF%/*}/Includes"
tlsconf="${APACHECONF%/*}/extra/tls-listen.conf"
ssldir="${APACHECONF%/*}"

configure_apache() {
    ########## ########## ########## ##########
    cat ${APACHECONF}.sample \
        | sed 's/#LoadModule ssl_module libexec\/apache24\/mod_ssl.so/LoadModule ssl_module libexec\/apache24\/mod_ssl.so/' \
        | sed 's/#LoadModule socache_shmcb_module libexec\/apache24\/mod_socache_shmcb.so/LoadModule socache_shmcb_module libexec\/apache24\/mod_socache_shmcb.so/' \
        >${APACHECONF}
    chmod 644 ${APACHECONF}
    ########## ########## ########## ##########
    cat >${tlsconf} <<EOF
Listen 443
ServerName localhost.my.domain
SSLSessionCache        "shmcb:/var/run/ssl_scache(512000)"
SSLProtocol             all -SSLv2 -SSLv3
SSLCipherSuite          ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA
SSLHonorCipherOrder     on
EOF
    chmod 644 ${tlsconf}
    if [ ! -e ${includesdir}/tls-listen.conf ]; then
        cp -a ${tlsconf} ${includesdir}/tls-listen.conf
    fi
    ########## ########## ########## ##########
    cat >${APACHECONF%/*}/extra/example-horde.conf <<EOF
    # example horde
    # things to change:
    #   localhost.my.domain
<VirtualHost *:443>
    # Required modules: mod_log_config, mod_setenvif, mod_ssl,
    #          socache_shmcb_module (for default value of SSLSessionCache)
    SSLSessionCacheTimeout  300
    DocumentRoot "/usr/local/www/apache24/data"
    ServerName localhost.my.domain:443
    ServerAdmin postmaster@localhost.my.domain
    ErrorLog "/var/log/httpd-error-localhost.my.domain.log"
    CustomLog "/var/log/httpd-access-localhost.my.domain.log" combined
    SSLEngine on
    SSLCertificateFile "${ssldir}/server.crt"
    SSLCertificateKeyFile "${ssldir}/server.key"
    <FilesMatch "\.(cgi|shtml|phtml|php)$">
        SSLOptions +StdEnvVars
    </FilesMatch>
    BrowserMatch "MSIE [2-6]" \
        nokeepalive ssl-unclean-shutdown \
        downgrade-1.0 force-response-1.0
    # MSIE 7 and newer should be able to use keepalive
    BrowserMatch "MSIE [17-9]" ssl-unclean-shutdown
    # See /usr/local/etc/apache24/extra/httpd-ssl.conf for more

    Alias /horde /usr/local/www/horde
    # http://wiki.horde.org/ActiveSync
    Alias /Microsoft-Server-ActiveSync /usr/local/www/horde/rpc.php
    Alias /autodiscover/autodiscover.xml /usr/local/www/horde/rpc.php
    Alias /Autodiscover/Autodiscover.xml /usr/local/www/horde/rpc.php
    Alias /AutoDiscover/AutoDiscover.xml /usr/local/www/horde/rpc.php
    <Directory /usr/local/www/horde>
        AllowOverride Limit FileInfo
    </Directory>

</VirtualHost>
EOF
    chmod 644 ${APACHECONF%/*}/extra/example-horde.conf
}

openssl_generate() {
    [ -d "${ssldir}" ] || install -d -m 755 "${ssldir}"
    umask 077
    if [ ! -e "${ssldir}/dhparam.pem" ]; then
        if [ -e /usr/local/etc/nginx/ssl/dhparam.pem ]; then
            cp -a /usr/local/etc/nginx/ssl/dhparam.pem "${ssldir}/dhparam.pem"
        else
            openssl dhparam -out "${ssldir}/dhparam.pem" 2048
        fi
        chmod 600 "${ssldir}/dhparam.pem"
    fi
    if [ ! -e "${ssldir}/server.key" ]; then
        if [ -e /usr/local/etc/nginx/ssl/ssl.key ]; then
            cp -a /usr/local/etc/nginx/ssl/ssl.key "${ssldir}/server.key"
        else
            openssl genrsa -out "${ssldir}/server.key" 4096
        fi
        chmod 600 "${ssldir}/server.key"
    fi
    if [ ! -e "${ssldir}/server.csr" ]; then
        if [ -e /usr/local/etc/nginx/ssl/ssl.csr ]; then
            cp -a /usr/local/etc/nginx/ssl/ssl.csr "${ssldir}/server.csr"
        else
            yes '' | openssl req -sha256 -new -key "${ssldir}/server.key" -out "${ssldir}/server.csr"
        fi
        chmod 600 "${ssldir}/server.csr"
    fi
    umask 022
    if [ ! -e "${ssldir}/server.crt" ]; then
        if [ -e /usr/local/etc/nginx/ssl/ssl.crt ]; then
            cp -a /usr/local/etc/nginx/ssl/ssl.crt "${ssldir}/server.crt"
            cat "${ssldir}/dhparam.pem" >>"${ssldir}/server.crt"
        else
            openssl x509 -req -sha256 -days 365 -in "${ssldir}/server.csr" -signkey "${ssldir}/server.key" -out "${ssldir}/server.crt"
            cat "${ssldir}/dhparam.pem" >>"${ssldir}/server.crt"
        fi
        chmod 640 "${ssldir}/server.crt"
    fi
}

configure_apache
openssl_generate
